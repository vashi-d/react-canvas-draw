{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6a251fc77ce845e41c92","webpack:///./src/index.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_default","props","_classCallCheck","_this","_possibleConstructorReturn","_Component","getSaveData","saveData","linesArray","width","canvasWidth","height","canvasHeight","JSON","stringify","loadSaveData","immediate","Error","_JSON$parse","parse","push","clear","scaleX","scaleY","scaleAvg","map","line","_extends","endX","endY","startX","startY","size","redraw","err","ctx","clearRect","timeoutValidity","forEach","idx","drawLine","window","setTimeout","loadTimeOffset","getMousePos","e","rect","canvas","getBoundingClientRect","clientX","clientY","touches","length","x","left","y","top","startDrawIdx","undo","splice","pop","strokeStyle","color","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","drawStart","isMouseDown","_this$getMousePos","draw","drawEnd","disabled","_this$getMousePos2","newX","newY","brushColor","brushSize","onChange","render","_this2","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","style","display","background","touchAction","ref","getContext","onMouseDown","onClick","onMouseUp","onMouseOut","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","__WEBPACK_IMPORTED_MODULE_0_react__","defaultProps"],"mappings":"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","file":"react-canvas-draw.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCanvasDraw\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCanvasDraw\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6a251fc77ce845e41c92","import React, { Component } from \"react\";\r\n\r\nexport default class extends Component {\r\n  static defaultProps = {\r\n    loadTimeOffset: 5,\r\n    brushSize: 6,\r\n    brushColor: \"#444\",\r\n    canvasWidth: 400,\r\n    canvasHeight: 400,\r\n    disabled: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.isMouseDown = false;\r\n    this.linesArray = [];\r\n    this.startDrawIdx = [];\r\n    this.timeoutValidity = 0;\r\n  }\r\n\r\n  getSaveData = () => {\r\n    const saveData = {\r\n      linesArray: this.linesArray,\r\n      width: this.props.canvasWidth,\r\n      height: this.props.canvasHeight\r\n    };\r\n    return JSON.stringify(saveData);\r\n  };\r\n\r\n  loadSaveData = (saveData, immediate) => {\r\n    try {\r\n      if (typeof saveData !== \"string\") {\r\n        throw new Error(\"saveData needs to be a stringified array!\");\r\n      }\r\n      // parse first to catch any possible errors before clear()\r\n      const { linesArray, width, height } = JSON.parse(saveData);\r\n\r\n      if (!linesArray || typeof linesArray.push !== \"function\") {\r\n        throw new Error(\"linesArray needs to be an array!\");\r\n      }\r\n\r\n      // start the load-process\r\n      this.clear();\r\n\r\n      if (\r\n        width === this.props.canvasWidth &&\r\n        height === this.props.canvasHeight\r\n      ) {\r\n        this.linesArray = linesArray;\r\n      } else {\r\n        // we need to rescale the lines based on saved & current dimensions\r\n        const scaleX = this.props.canvasWidth / width;\r\n        const scaleY = this.props.canvasHeight / height;\r\n        const scaleAvg = (scaleX + scaleY) / 2;\r\n\r\n        this.linesArray = linesArray.map(line => ({\r\n          ...line,\r\n          endX: line.endX * scaleX,\r\n          endY: line.endY * scaleY,\r\n          startX: line.startX * scaleX,\r\n          startY: line.startY * scaleY,\r\n          size: line.size * scaleAvg\r\n        }));\r\n      }\r\n\r\n      this.redraw(immediate);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  redraw = immediate => {\r\n    if (this.ctx) {\r\n      this.ctx.clearRect(0, 0, this.props.canvasWidth, this.props.canvasHeight);\r\n    }\r\n\r\n    this.timeoutValidity++;\r\n    const timeoutValidity = this.timeoutValidity;\r\n    this.linesArray.forEach((line, idx) => {\r\n      // draw the line with a time offset\r\n      // creates the cool drawing-animation effect\r\n      if (!immediate) {\r\n        window.setTimeout(\r\n          () => {\r\n            if (timeoutValidity === this.timeoutValidity) {\r\n              this.drawLine(line);\r\n            }\r\n          },\r\n          idx * this.props.loadTimeOffset\r\n        );\r\n      } else {\r\n        // if the immediate flag is true, draw without timeout\r\n        this.drawLine(line);\r\n      }\r\n    });\r\n  };\r\n\r\n  getMousePos = e => {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n\r\n    // use cursor pos as default\r\n    let clientX = e.clientX;\r\n    let clientY = e.clientY;\r\n\r\n    // use first touch if available\r\n    if (e.touches && e.touches.length > 0) {\r\n      clientX = e.touches[0].clientX;\r\n      clientY = e.touches[0].clientY;\r\n    }\r\n\r\n    // return mouse/touch position inside canvas\r\n    return {\r\n      x: clientX - rect.left,\r\n      y: clientY - rect.top\r\n    };\r\n  };\r\n\r\n  clear = () => {\r\n    if (this.ctx) {\r\n      this.ctx.clearRect(0, 0, this.props.canvasWidth, this.props.canvasHeight);\r\n    }\r\n    this.timeoutValidity++;\r\n    this.linesArray = [];\r\n    this.startDrawIdx = [];\r\n  };\r\n\r\n  undo = () => {\r\n    if (this.startDrawIdx.length > 0) {\r\n      this.linesArray.splice(\r\n        this.startDrawIdx.pop()\r\n      );\r\n      this.redraw(true);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  drawLine = line => {\r\n    if (!this.ctx) return;\r\n\r\n    this.ctx.strokeStyle = line.color;\r\n    this.ctx.lineWidth = line.size;\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(line.startX, line.startY);\r\n    this.ctx.lineTo(line.endX, line.endY);\r\n    this.ctx.stroke();\r\n  };\r\n\r\n  drawStart = e => {\r\n    this.isMouseDown = true;\r\n    this.startDrawIdx.push(this.linesArray.length);\r\n\r\n    const { x, y } = this.getMousePos(e);\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // make sure we start painting, useful to draw simple dots\r\n    this.draw(e);\r\n  };\r\n\r\n  drawEnd = () => {\r\n    this.isMouseDown = false;\r\n  };\r\n\r\n  draw = e => {\r\n    if (!this.isMouseDown || this.props.disabled) return;\r\n\r\n    // calculate the current x, y coords\r\n    const { x, y } = this.getMousePos(e);\r\n\r\n    // Offset by 1 to ensure drawing a dot on click\r\n    const newX = x + 1;\r\n    const newY = y + 1;\r\n\r\n    // create current line object\r\n    const line = {\r\n      color: this.props.brushColor,\r\n      size: this.props.brushSize,\r\n      startX: this.x,\r\n      startY: this.y,\r\n      endX: newX,\r\n      endY: newY\r\n    };\r\n\r\n    // actually draw the line\r\n    this.drawLine(line);\r\n\r\n    // push it to our array of lines\r\n    this.linesArray.push(line);\r\n\r\n    // notify parent that a new line was added\r\n    if (typeof this.props.onChange === \"function\") {\r\n      this.props.onChange(this.linesArray);\r\n    }\r\n\r\n    // set current x, y coords\r\n    this.x = newX;\r\n    this.y = newY;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        width={this.props.canvasWidth}\r\n        height={this.props.canvasHeight}\r\n        style={{\r\n          display: \"block\",\r\n          background: \"#fff\",\r\n          touchAction: \"none\",\r\n          ...this.props.style\r\n        }}\r\n        ref={canvas => {\r\n          if (canvas) {\r\n            this.canvas = canvas;\r\n            this.ctx = canvas.getContext(\"2d\");\r\n          }\r\n        }}\r\n        onMouseDown={this.drawStart}\r\n        onClick={() => false}\r\n        onMouseUp={this.drawEnd}\r\n        onMouseOut={this.drawEnd}\r\n        onMouseMove={this.draw}\r\n        onTouchStart={this.drawStart}\r\n        onTouchMove={this.draw}\r\n        onTouchEnd={this.drawEnd}\r\n        onTouchCancel={this.drawEnd}\r\n      />\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}